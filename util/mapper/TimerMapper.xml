<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="timerMapper">

	<!-- TimerDTO 매핑 -->
	<resultMap id="timerResultMap" type="model.dto.TimerDTO">
		<id property="userId" column="USER_ID" />
		<result property="subject" column="SUBJECT" />
		<result property="total" column="TOTAL" />
		<result property="totalMinutes" column="TOTAL_MINUTES" />
		<result property="clear" column="CLEAR" />
	</resultMap>

	<!-- TimerTodoDTO 매핑 (TODO_LIST와 STUDY_TIMER 조인 결과) -->
	<resultMap id="timerTodoResultMap" type="model.dto.TimerTodoDTO">
		<id property="todoId" column="TODO_ID" />
		<result property="userId" column="USER_ID" />
		<result property="subject" column="SUBJECT" />
		<result property="content" column="CONTENT" />
		<result property="deadline" column="DEADLINE" jdbcType="DATE" />
		<result property="goal" column="GOAL" jdbcType="INTEGER" />
		<result property="status" column="STATUS" />
		<result property="createdAt" column="CREATED_AT" jdbcType="TIMESTAMP" />
		<result property="feedback" column="FEEDBACK" />
		<result property="total" column="TOTAL" jdbcType="INTEGER" /> <!-- STUDY_TIMER.TOTAL -->
		<result property="totalMinutes" column="TOTAL_MINUTES" jdbcType="INTEGER" /> <!-- STUDY_TIMER.TOTAL_MINUTES -->
		<result property="clear" column="CLEAR" jdbcType="DATE" /> <!-- STUDY_TIMER.CLEAR -->
	</resultMap>


	<!-- =================================================================== -->
	<!-- SELECT 쿼리 -->
	<!-- =================================================================== -->

	<!-- 특정 과목 타이머 조회 -->
	<select id="getTimer" parameterType="map"
		resultMap="timerResultMap">
		SELECT *
		FROM STUDY_TIMER
		WHERE USER_ID = #{userId}
		AND SUBJECT = #{subject}
	</select>

	<!-- 전체 타이머 목록 조회 -->
	<select id="selectTimersByUserId" parameterType="string"
		resultMap="timerResultMap">
		SELECT *
		FROM STUDY_TIMER
		WHERE USER_ID = #{userId}
	</select>

	<!-- TODO와 조인된 타이머 목록 (오늘 날짜 기준 DEADLINE을 넘지 않고, CLEAR 날짜 이후는 제외) -->
	<select id="selectTimerTodoListByUserId" parameterType="string"
		resultMap="timerTodoResultMap">
		SELECT
		t.USER_ID,
		t.SUBJECT,
		t.TOTAL_MINUTES,
		t.TOTAL,
		t.CLEAR,
		td.TODO_ID,
		td.DEADLINE,
		td.STATUS,
		td.CONTENT,
		td.GOAL,
		td.CREATED_AT,
		td.FEEDBACK
		FROM STUDY_TIMER t
		JOIN TODO_LIST td
		ON t.USER_ID = td.USER_ID
		AND t.SUBJECT = td.SUBJECT
		WHERE t.USER_ID = #{userId}
		<!-- ✅ DEADLINE을 넘지 않는 조건 -->
		AND (td.DEADLINE IS NULL OR td.DEADLINE >= TRUNC(SYSDATE))
		<!-- ✅ CLEAR에 값이 있으면, CLEAR 날짜 이후는 제외 -->
		AND (t.CLEAR IS NULL OR t.CLEAR >= TRUNC(SYSDATE))
	</select>

	<!-- 누적 시간 가져오기 -->
	<select id="getGoalByUserIdAndSubject" parameterType="map"
		resultType="int">
		SELECT TOTAL_MINUTES FROM STUDY_TIMER
		WHERE USER_ID = #{userId} AND SUBJECT = #{subject}
	</select>

	<!-- STUDY_TIMER의 TOTAL 값 가져오기 -->
	<select id="getTotalByUserIdAndSubject" parameterType="map"
		resultType="int">
		SELECT TOTAL FROM STUDY_TIMER
		WHERE USER_ID = #{userId} AND SUBJECT = #{subject}
	</select>


	<!-- =================================================================== -->
	<!-- INSERT 쿼리 -->
	<!-- =================================================================== -->

	<!-- 타이머 생성 -->
	<insert id="insertTimer" parameterType="model.dto.TimerDTO">
		INSERT INTO STUDY_TIMER
		(USER_ID, SUBJECT, TOTAL)
		VALUES (#{userId}, #{subject}, #{total})
	</insert>

	<!-- 목표 시간 저장 (MERGE) -->
	<insert id="insertGoalTime" parameterType="map">
		MERGE INTO STUDY_TIMER
		USING dual
		ON (USER_ID = #{userId} AND SUBJECT = #{subject})
		WHEN MATCHED THEN
		UPDATE SET TOTAL_MINUTES = #{goal}
		WHEN NOT MATCHED THEN
		INSERT (USER_ID, SUBJECT, TOTAL_MINUTES)
		VALUES (#{userId}, #{subject}, #{goal})
	</insert>


	<!-- =================================================================== -->
	<!-- UPDATE 쿼리 -->
	<!-- =================================================================== -->

	<!-- 누적 시간 업데이트 -->
	<update id="updateTimerTotal" parameterType="map">
		UPDATE STUDY_TIMER
		SET TOTAL = #{total}
		WHERE USER_ID = #{userId}
		AND SUBJECT = #{subject}
	</update>

	<!-- 완료 날짜 저장 -->
	<update id="updateClearDate" parameterType="map">
		UPDATE STUDY_TIMER
		SET CLEAR = #{clearDate}
		WHERE USER_ID = #{userId}
		AND SUBJECT = #{subject}
	</update>


	<!-- =================================================================== -->
	<!-- DELETE 쿼리 -->
	<!-- =================================================================== -->

	<!-- 타이머 삭제 -->
	<delete id="deleteTimer" parameterType="map">
		DELETE FROM STUDY_TIMER
		WHERE USER_ID = #{userId}
		AND SUBJECT = #{subject}
	</delete>

</mapper>
