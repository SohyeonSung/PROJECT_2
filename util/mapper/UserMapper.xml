<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

	<!-- 회원가입 -->
	<insert id="signup" parameterType="model.dto.UserDTO">
		INSERT INTO USERS
		(USER_ID,PASSWORD,NICKNAME,EMAIL,USER_NAME,USER_GRADE,CREATED_AT)
		VALUES
		(#{userId},#{password},#{nickname},#{email},#{userName},#{userGrade},SYSDATE)
	</insert>

	<!-- 로그인 -->
	<select id="login" parameterType="model.dto.UserDTO"
		resultType="model.dto.UserDTO">
		SELECT USER_ID, PASSWORD, NICKNAME, EMAIL, USER_NAME,
		USER_GRADE, CREATED_AT, SUSPENDED_UNTIL
		FROM USERS
		WHERE USER_ID = #{userId}
		AND PASSWORD = #{password}
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="findPassword" parameterType="map"
		resultType="string">
		SELECT PASSWORD
		FROM USERS
		WHERE USER_ID = #{userId}
		AND EMAIL
		= #{email}
	</select>

	<!-- 정보 수정 -->
	<update id="update" parameterType="model.dto.UserDTO">
		UPDATE USERS
		SET NICKNAME =
		#{nickname},
		PASSWORD = #{password}
		WHERE USER_ID = #{userId}
	</update>

	<!-- ✅ 의존성 삭제 쿼리들: 순차적으로 실행 필요 -->
	<delete id="deletePostLikes" parameterType="string">
		DELETE FROM
		POST_LIKES WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteComments" parameterType="string">
		DELETE FROM COMMENTS
		WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteScrapsByPostAuthor" parameterType="string">
		DELETE FROM
		SCRAPS
		WHERE POST_ID IN (
		SELECT POST_ID FROM POSTS WHERE USER_ID =
		#{userId}
		)
	</delete>

	<delete id="deleteNotifications" parameterType="string">
		DELETE FROM
		NOTIFICATIONS WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteStudyTimer" parameterType="string">
		DELETE FROM
		STUDY_TIMER WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteTodoList" parameterType="string">
		DELETE FROM TODO_LIST
		WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteStudyStats" parameterType="string">
		DELETE FROM
		STUDY_STATS WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteStudyGroup" parameterType="string">
		DELETE FROM
		STUDY_GROUP WHERE LEADER_ID = #{userId}
	</delete>

	<!-- 게시글은 가장 마지막 단계에서 삭제 -->
	<delete id="deletePostsByUserId" parameterType="string">
		DELETE FROM POSTS
		WHERE USER_ID = #{userId}
	</delete>

	<delete id="deleteUser" parameterType="string">
		DELETE FROM USERS WHERE
		USER_ID = #{userId}
	</delete>


	<!-- 관리자 회원 목록 조회 -->
	<select id="getAllUsers" resultType="model.dto.UserDTO">
		SELECT * FROM USERS
		WHERE
		USER_GRADE != '관리자'
		ORDER BY CREATED_AT DESC
	</select>


	<!-- 관리자 회원 목록 상세 조회 -->
	<select id="getUserById" parameterType="string"
		resultType="model.dto.UserDTO">
		SELECT * FROM USERS WHERE USER_ID = #{userId}
	</select>

	<!-- 사용자 정지 -->
	<update id="suspendUser" parameterType="map">
		UPDATE USERS SET
		SUSPENDED_UNTIL = #{until} WHERE USER_ID = #{userId}
	</update>


	<select id="getSuspendedUsers" resultType="model.dto.UserDTO">
		SELECT *
		FROM USERS
		WHERE SUSPENDED_UNTIL > SYSDATE
		ORDER BY SUSPENDED_UNTIL DESC
	</select>

	<update id="unsuspendUser" parameterType="string">
		UPDATE USERS SET
		SUSPENDED_UNTIL = NULL
		WHERE USER_ID = #{userId}
	</update>



	<select id="getUsersUnsuspendedToday" resultType="string">
		SELECT USER_ID
		FROM USERS
		WHERE TRUNC(SUSPENDED_UNTIL) = TRUNC(SYSDATE)
	</select>

</mapper>